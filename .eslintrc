{
  "extends": [
    "airbnb"
  ],
  "parser": "typescript-eslint-parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "tsconfigRootDir": "."
  },
  "env": {
    "browser": true
  },
  "plugins": [
    "typescript",
    "react",
    "jsx-a11y",
    "import"
  ],
  "rules": {
    "no-console": 1,
    "class-methods-use-this": [1],
    "import/named": "off",
    "import/export": "off",
    "import/prefer-default-export": "off", // Allow single Named-export
    "no-unused-expressions": ["warn", {
      "allowShortCircuit": true,
      "allowTernary": true
    }],
    "typescript/no-unused-vars": "warn",
    "@typescript-eslint/prefer-interface": "off", // also want to use "type"
    "@typescript-eslint/explicit-function-return-type": "off", // annoying to force return type
    "react/jsx-filename-extension": ["warn", {
      "extensions": [".jsx", ".tsx"]
    }], // also want to use with ".tsx"
    "react/prop-types": "off", // Is this incompatible with TS props type?
    "jsx-a11y/no-static-element-interactions": 0,
    "jsx-a11y/click-events-have-key-events": 0,
    "jsx-a11y/interactive-supports-focus": 0
  },
  "settings": {
    "import/resolver": {
      "webpack": {
        "webpack.config.js": {
          "resolve": {
            "alias": {
              "$components": "src/components",
              "$containers": "src/containers",
              "$constants": "src/constants",
              "$sprites": "src/sprites",
              "$styles": "src/styles",
              "$redux": "src/redux",
              "$utils": "src/utils"
            },
            "extensions": [
              ".js",
              ".jsx",
              "ts",
              "tsx",
              ".scss"
            ],
            "modules": [
              "src",
              "node_modules"
            ]
          }
        }
      }
    }
  }
}
